name: ci
on: [push, pull_request]
jobs:
    native-build:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive
                  fetch-depth: 0

            # Windows: set up MSVC environment (adds cl.exe to PATH, sets vars)
            - name: Setup MSVC (Windows)
              if: runner.os == 'Windows'
              uses: ilammy/msvc-dev-cmd@v1
              with:
                  arch: x64

            # Bootstrap vcpkg per-OS (robust shells)
            - name: Bootstrap vcpkg (Unix)
              if: runner.os != 'Windows'
              shell: bash
              run: ./vcpkg/bootstrap-vcpkg.sh

            - name: Bootstrap vcpkg (Windows)
              if: runner.os == 'Windows'
              shell: cmd
              run: .\vcpkg\bootstrap-vcpkg.bat

            - name: CMake version
              run: cmake --version

            - name: Configure
              shell: bash
              run: cmake --preset release

            - name: Build
              shell: bash
              run: cmake --build --preset build-release

            - name: Smoke run
              shell: bash
              run: |
                  if [ "$RUNNER_OS" == "Windows" ]; then
                    ./build/app.exe
                  else
                    ./build/app
                  fi

            - name: CTest run
              shell: bash
              run: |
                  cd build
                  ctest

    docker:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive
                  fetch-depth: 0

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: false
                  load: true
                  tags: app:test
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Run Docker container
              run: docker run --rm app:test
